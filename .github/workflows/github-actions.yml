# name: GitHub Actions Demo
# run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
# on: [push]
# jobs:
#   Explore-GitHub-Actions:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
#       - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#       - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
#       - name: Check out repository code
#         uses: actions/checkout@v4
#       - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
#       - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
#       - name: List files in the repository
#         run: |
#           ls ${{ github.workspace }}
#       - run: echo "üçè This job's status is ${{ job.status }}."

name: Build And Deploy Actions

on:
  push:
    branches:
      - main

env:
  DOCKER_HUB_REPO: ${{secrets.DOCKER_HUB_REPO}}

jobs:
  # build:
  #   name: Build Job
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Display Current Directory
  #       run: pwd

  #     - name: Display Current Directory ls
  #       run: ls

  #     - name: Change Directory to /App
  #       run: |
  #         cd App
  #         docker build -t ${{env.DOCKER_HUB_REPO}} .

  deploy:
    name: Deploy Job
    runs-on: ubuntu-latest
    # needs: build

    steps:
      - name: check ls
        run: ls

      - name: install cdk cli
        run: npm install

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: install cdk cli
        run: npm install -g aws-cdk

      - name: Check CDK command
        run: cdk --version

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ap-northeast-1

      - name: Deploy with CDK
        run: cdk deploy '*' --require-approval never
